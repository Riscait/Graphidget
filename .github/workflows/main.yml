name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore: 
      - README.md
      - LICENSE
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - README.md
      - LICENSE

env:
  DEVELOPER_DIR: /Applications/Xcode_12.app

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Show Xcode version
      run: xcodebuild -version

    - name: Install Mint
      run: brew install mint
    
    - name: Mint bootstrap
      run: mint bootstrap
      
    - name: Cache Mint packages
      uses: actions/cache@v2.1.2
      with:
        path: mint
        key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
        restore-keys: |
          ${{ runner.os }}-mint-
          
    # Carthageで管理しているライブラリのインストール
    - name: Install Carthage frameworks
      run: mint run carthage carthage bootstrap --platform iOS --cache-builds
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Carthageで管理しているライブラリのキャッシュ
    - name: Cache Carthage packages
      uses: actions/cache@v2
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-

    - name: XcodeGen generate
      run: mint run xcodegen xcodegen generate
    
    - name: Xcode Build
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -scheme Graphidget
        build
        | xcpretty
        
    - name: Xcode Test
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -scheme Graphidget
        -destination 'platform=iOS Simulator,name=iPhone 11 Pro Max'
        clean test
        | xcpretty --report html
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        name: test-results
        path: build/reports
