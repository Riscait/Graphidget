name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore: 
      - README.md
      - LICENSE
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - README.md
      - LICENSE

env:
  DEVELOPER_DIR: /Applications/Xcode_12.app

jobs:
  build:
    runs-on: macos-latest

    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Xcodeのバージョン出力
    - name: Show Xcode version
      run: xcodebuild -version

    # Makeのバージョン出力
    - name: Show Make version
      run: make --version

    # Mintのインストール
    - name: Install Mint
      run: brew install mint
    
    # Mint で管理しているパッケージのインストールは自動で行われる
    - name: Cache Mint packages
      uses: actions/cache@v2.1.2
      with:
        path: mint
        key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
        restore-keys: |
          ${{ runner.os }}-mint-
      
    # Carthageで管理しているライブラリのキャッシュ
    - name: Cache Carthage packages
      uses: actions/cache@v2
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-

    # Carthageで管理しているライブラリのインストール
    - name: Install Carthage frameworks
      run: make carthage-bootstrap
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Xcode Projectを生成
    - name: XcodeGen generate
      run: mint run xcodegen xcodegen generate
    
    # ビルド
    - name: Xcode Build
      run: make build-debug
        
    # 単体テストの実行
    - name: Xcode Test
      run: make test
        
    # 成果物のアップロード
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        name: test-results
        path: build/reports

  info:
    runs-on: macOS-latest

    steps:
    # チェックアウト
    - uses: actions/checkout@v2

    # Xcodeの一覧出力
    - name: Show Xcode list
      run: ls /Applications | grep 'Xcode'

    # 端末の一覧出力
    - name: Show devices
      run: make show-devices
